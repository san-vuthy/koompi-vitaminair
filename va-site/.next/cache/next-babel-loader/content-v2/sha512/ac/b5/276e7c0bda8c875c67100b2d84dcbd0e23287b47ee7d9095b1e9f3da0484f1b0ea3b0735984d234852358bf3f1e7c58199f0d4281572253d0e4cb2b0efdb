{"ast":null,"code":"import _defineProperty from \"/home/sovanden/projects/vitaminair.org/va-site/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/sovanden/projects/vitaminair.org/va-site/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/sovanden/projects/vitaminair.org/va-site/pages/home/inforForm.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Divider, Row, Col, Button, Input, Form, Checkbox, Select, Radio, message } from \"antd\";\nimport styles from \"../../styles/Home.module.css\"; // import { DONATE_TREES } from \"../../graphql/mutaion\";\n// import { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\";\n// import { useQuery, useMutation } from \"@apollo/client\";\n\nfunction InfoForm() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      current = _useState[0],\n      setCurrent = _useState[1]; //   const [donation] = useMutation(DONATE_TREES);\n  //   const { refetch } = useQuery(GET_DONATIONS);\n  //   const [loading, setLoading] = useState(false);\n  //   const { refetch: refetchMostDonation } = useQuery(GET_MOST_DONATIONS);\n\n\n  var _Form$useForm = Form.useForm(),\n      _Form$useForm2 = _slicedToArray(_Form$useForm, 1),\n      form = _Form$useForm2[0];\n\n  var next = function next(e) {\n    e.preventDefault();\n    setCurrent(current + 1);\n  }; //go to prev step in form\n\n\n  var prev = function prev(e) {\n    e.preventDefault();\n    setCurrent(current - 1);\n  }; //form\n\n\n  var layout = {\n    labelCol: {\n      span: 24\n    },\n    wrapperCol: {\n      span: 24\n    }\n  };\n  var tailLayout = {\n    wrapperCol: {\n      span: 24\n    }\n  };\n\n  var onFinish = function onFinish(values) {\n    // const { tree } = values;\n    // donation({\n    //   variables: {\n    //     ...values,\n    //     // user_message: user_message === undefined ? \"\" : user_message,\n    //     // phone: phone === undefined ? \"No\" : phone,\n    //     tree: parseInt(tree),\n    //   },\n    // }).then(async (res) => {\n    //   setLoading(true);\n    //   message.success(\"Donation Successful\");\n    //   await refetch();\n    //   await refetchMostDonation();\n    //   form.resetFields();\n    //   setLoading(false);\n    // });\n    console.log(values);\n  };\n\n  var onFinishFailed = function onFinishFailed(errorInfo) {\n    console.log(\"Failed:\", errorInfo);\n  }; //form steps\n\n\n  var Step1Form = function Step1Form() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.h2,\n            children: \"JOIN VitaminAir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.join_desc,\n            children: \"Join VitaminAir to Plant trees and Educate the next generation.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [12, 12],\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"tree\",\n              children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                children: /*#__PURE__*/_jsxDEV(Radio.Button, {\n                  className: \"radio-button\",\n                  value: 5,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-radio-button\",\n                    children: \"5 trees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"tree\",\n              initialValue: 20,\n              children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                defaultValue: 20,\n                children: /*#__PURE__*/_jsxDEV(Radio.Button, {\n                  className: \"radio-button\",\n                  value: 20,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-radio-button \",\n                    children: \"20 trees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"tree\",\n              children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                children: /*#__PURE__*/_jsxDEV(Radio.Button, {\n                  className: \"radio-button\",\n                  value: 50,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-radio-button \",\n                    children: \"50 trees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            span: 12,\n            children: /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"tree\",\n              children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n                children: /*#__PURE__*/_jsxDEV(Radio.Button, {\n                  className: \"radio-button\",\n                  value: 100,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-radio-button \",\n                    children: \"100 trees\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"tree\",\n          label: \"Other Amount\",\n          initialValue: 20,\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            rules: [{\n              required: true,\n              message: \"Please Select or Input Amount\"\n            }],\n            className: \"input-amount\",\n            id: \"tree-amount\",\n            type: \"number\",\n            placeholder: \"Other Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false);\n  };\n\n  var Step2Form = function Step2Form() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"DISPLAY NAME\",\n        name: \"name\",\n        rules: [{\n          required: true,\n          message: \"Please input your username!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"EMAIL ADDRESS\",\n        name: \"email\",\n        rules: [{\n          required: true,\n          message: \"Please input your email!\",\n          type: \"email\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"MOBILE PHONE\",\n        name: \"phone\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"optional; by entering a phone number, you consent to receive text messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"TEAM\",\n        name: \"team\",\n        rules: [{\n          required: true,\n          message: \"Please input your team!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"optional\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"MESSAGE\",\n        name: \"user_message\" // rules={[{ required: true, message: \"Please input your message!\" }]}\n        ,\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"optional; for display on the website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        className: \"details-input\",\n        label: \"Select\",\n        name: \"selectType\",\n        rules: [{\n          required: true,\n          message: \"Please selecet one!\"\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n            value: \"Plant trees & Forest Patrolling\",\n            children: [\"Plant trees & Forest Patrolling\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Select.Option, {\n            value: \"School & Community Development\",\n            children: \"School & Community Development\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({\n        className: \"details-input\"\n      }, tailLayout), {}, {\n        name: \"public\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"#0cb04a\"\n            },\n            children: \" YES!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, _this), \" I want periodic updates on\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            style: {\n              color: \"rgb(5, 118, 48)\"\n            },\n            href: \"https://t.me/vitaminair\",\n            children: \"@VitaminAir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({\n        className: \"details-input\"\n      }, tailLayout), {}, {\n        name: \"anonymous\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Please keep my donation anonymous \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var steps = [{\n    step: 1,\n    title: \"First\",\n    content: /*#__PURE__*/_jsxDEV(Step1Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 16\n    }, this)\n  }, {\n    step: 2,\n    title: \"Second\",\n    content: /*#__PURE__*/_jsxDEV(Step2Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 16\n    }, this)\n  }];\n  return (\n    /*#__PURE__*/\n    // <Step1Form>\n    _jsxDEV(\"div\", {\n      className: \"center container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form\",\n        className: \"form\",\n        children: /*#__PURE__*/_jsxDEV(Form, _objectSpread(_objectSpread({\n          form: form,\n          style: {\n            textAlign: \"left\"\n          }\n        }, layout), {}, {\n          name: \"basic\" // initialValues={{ remember: true }}\n          ,\n          onFinish: onFinish,\n          onFinishFailed: onFinishFailed,\n          children: [steps.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-content \".concat(item.step !== current + 1 && \"hidden\"),\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 13\n            }, _this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"steps-action\",\n            children: [current < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"btn-position\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                htmlType: \"submit\",\n                onClick: next,\n                type: \"primary\",\n                className: \"next-btn\",\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(Form.Item, _objectSpread(_objectSpread({}, tailLayout), {}, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                style: {\n                  width: \"100%\"\n                },\n                className: \"next-btn\",\n                children: loading ? /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 30\n                }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"SUMBIT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), current > 0 && /*#__PURE__*/_jsxDEV(Button, {\n              className: \"prev\",\n              onClick: prev,\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(InfoForm, \"3REY8+cPazCP8u0gOopNqNDS5IA=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = InfoForm;\nexport default InfoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoForm\");","map":{"version":3,"sources":["/home/sovanden/projects/vitaminair.org/va-site/pages/home/inforForm.js"],"names":["React","useState","Divider","Row","Col","Button","Input","Form","Checkbox","Select","Radio","message","styles","InfoForm","current","setCurrent","useForm","form","next","e","preventDefault","prev","layout","labelCol","span","wrapperCol","tailLayout","onFinish","values","console","log","onFinishFailed","errorInfo","Step1Form","h2","join_desc","required","Step2Form","textAlign","type","color","steps","step","title","content","map","item","length","width","loading"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Divider,\n  Row,\n  Col,\n  Button,\n  Input,\n  Form,\n  Checkbox,\n  Select,\n  Radio,\n  message,\n} from \"antd\";\nimport styles from \"../../styles/Home.module.css\";\n// import { DONATE_TREES } from \"../../graphql/mutaion\";\n// import { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\";\n// import { useQuery, useMutation } from \"@apollo/client\";\n\nfunction InfoForm() {\n  const [current, setCurrent] = useState(0);\n  //   const [donation] = useMutation(DONATE_TREES);\n  //   const { refetch } = useQuery(GET_DONATIONS);\n  //   const [loading, setLoading] = useState(false);\n  //   const { refetch: refetchMostDonation } = useQuery(GET_MOST_DONATIONS);\n\n  const [form] = Form.useForm();\n  const next = (e) => {\n    e.preventDefault();\n    setCurrent(current + 1);\n  };\n\n  //go to prev step in form\n  const prev = (e) => {\n    e.preventDefault();\n    setCurrent(current - 1);\n  };\n\n  //form\n  const layout = {\n    labelCol: {\n      span: 24,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  };\n  const tailLayout = {\n    wrapperCol: {\n      span: 24,\n    },\n  };\n  const onFinish = (values) => {\n    // const { tree } = values;\n    // donation({\n    //   variables: {\n    //     ...values,\n    //     // user_message: user_message === undefined ? \"\" : user_message,\n    //     // phone: phone === undefined ? \"No\" : phone,\n    //     tree: parseInt(tree),\n    //   },\n    // }).then(async (res) => {\n    //   setLoading(true);\n    //   message.success(\"Donation Successful\");\n    //   await refetch();\n    //   await refetchMostDonation();\n    //   form.resetFields();\n    //   setLoading(false);\n    // });\n    console.log(values);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n  //form steps\n\n  const Step1Form = () => {\n    return (\n      <>\n        <div>\n          <center>\n            <h2 className={styles.h2}>JOIN VitaminAir</h2>\n            <p className={styles.join_desc}>\n              Join VitaminAir to Plant trees and Educate the next generation.\n            </p>\n          </center>\n          <Row gutter={[12, 12]}>\n            <Col span={12}>\n              {/* <Button\n                  onChange={(e) => setValue(e.target.value)}\n                  className=\"tree-amount\"\n                  onClick={amountActive}\n                >\n                  10,000 riel\n                </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={5}>\n                    <span className=\"text-radio-button\">5 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount amount-active\" onClick={amountActive}>\n                20,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\" initialValue={20}>\n                <Radio.Group defaultValue={20}>\n                  <Radio.Button className=\"radio-button\" value={20}>\n                    <span className=\"text-radio-button \">20 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount\" onClick={amountActive}>\n                30,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={50}>\n                    <span className=\"text-radio-button \">50 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount\" onClick={amountActive}>\n                40,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={100}>\n                    <span className=\"text-radio-button \">100 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item name=\"tree\" label=\"Other Amount\" initialValue={20}>\n            <Input\n              rules={[\n                { required: true, message: \"Please Select or Input Amount\" },\n              ]}\n              className=\"input-amount\"\n              id=\"tree-amount\"\n              type=\"number\"\n              placeholder=\"Other Amount\"\n            />\n          </Form.Item>\n          <Divider />\n        </div>\n      </>\n    );\n  };\n  const Step2Form = () => {\n    return (\n      <>\n        <h2 style={{ textAlign: \"center\" }}>Detail</h2>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"DISPLAY NAME\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"EMAIL ADDRESS\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email!\",\n              type: \"email\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item className=\"details-input\" label=\"MOBILE PHONE\" name=\"phone\">\n          <Input />\n        </Form.Item>\n        <p>\n          optional; by entering a phone number, you consent to receive text\n          messages\n        </p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"TEAM\"\n          name=\"team\"\n          rules={[{ required: true, message: \"Please input your team!\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <p>optional</p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"MESSAGE\"\n          name=\"user_message\"\n          // rules={[{ required: true, message: \"Please input your message!\" }]}\n        >\n          <Input.TextArea />\n        </Form.Item>\n        <p>optional; for display on the website</p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"Select\"\n          name=\"selectType\"\n          rules={[{ required: true, message: \"Please selecet one!\" }]}\n        >\n          <Select>\n            <Select.Option value=\"Plant trees & Forest Patrolling\">\n              Plant trees & Forest Patrolling{\" \"}\n            </Select.Option>\n            <Select.Option value=\"School & Community Development\">\n              School & Community Development\n            </Select.Option>\n            {/* <Select.Option value=\"Other\">Other</Select.Option> */}\n          </Select>\n        </Form.Item>\n        <Form.Item\n          className=\"details-input\"\n          {...tailLayout}\n          name=\"public\"\n          valuePropName=\"checked\"\n        >\n          <Checkbox>\n            {\" \"}\n            <span style={{ color: \"#0cb04a\" }}> YES!</span> I want periodic\n            updates on{\" \"}\n            <a\n              style={{ color: \"rgb(5, 118, 48)\" }}\n              href=\"https://t.me/vitaminair\"\n            >\n              @VitaminAir\n            </a>\n          </Checkbox>\n        </Form.Item>\n        <Form.Item\n          className=\"details-input\"\n          {...tailLayout}\n          name=\"anonymous\"\n          valuePropName=\"checked\"\n        >\n          <Checkbox>Please keep my donation anonymous </Checkbox>\n        </Form.Item>\n      </>\n    );\n  };\n  const steps = [\n    {\n      step: 1,\n      title: \"First\",\n      content: <Step1Form />,\n    },\n    {\n      step: 2,\n      title: \"Second\",\n      content: <Step2Form />,\n    },\n  ];\n  return (\n    // <Step1Form>\n    <div className=\"center container\">\n      <div id=\"form\" className=\"form\">\n        <Form\n          form={form}\n          style={{ textAlign: \"left\" }}\n          {...layout}\n          name=\"basic\"\n          // initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          {steps.map((item) => (\n            <div\n              className={`steps-content ${\n                item.step !== current + 1 && \"hidden\"\n              }`}\n            >\n              {item.content}\n            </div>\n          ))}\n          <div className=\"steps-action\">\n            {current < steps.length - 1 && (\n              <div className=\"btn-position\">\n                <Button\n                  htmlType=\"submit\"\n                  onClick={next}\n                  type=\"primary\"\n                  className=\"next-btn\"\n                >\n                  Next\n                </Button>\n              </div>\n            )}\n            {current === steps.length - 1 && (\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ width: \"100%\" }}\n                  className=\"next-btn\"\n                >\n                  {loading ? <small>loading...</small> : <small>SUMBIT</small>}\n                </Button>\n              </Form.Item>\n            )}\n            {current > 0 && (\n              <Button className=\"prev\" onClick={prev}>\n                Previous\n              </Button>\n            )}\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoForm;\n"]},"metadata":{},"sourceType":"module"}