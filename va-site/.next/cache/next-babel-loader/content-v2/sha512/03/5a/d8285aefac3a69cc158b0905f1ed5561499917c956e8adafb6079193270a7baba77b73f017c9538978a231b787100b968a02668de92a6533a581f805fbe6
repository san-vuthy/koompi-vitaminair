{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sovanden/projects/vitaminair.org/va-site/pages/home/leaderBoard.js\",\n    _s = $RefreshSig$();\n\n// import React from 'react'\nimport { Row, Col, Input, Button } from \"antd\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\n\nfunction Leaderboard() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"recent\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      search = _useState2[0],\n      setSearch = _useState2[1]; //=====get Data==========\n\n\n  var _useQuery = useQuery(GET_DONATIONS),\n      loading = _useQuery.loading,\n      donateData = _useQuery.data,\n      error = _useQuery.error;\n\n  var _useQuery2 = useQuery(GET_MOST_DONATIONS),\n      lodingMostDonate = _useQuery2.loading,\n      mostDonateData = _useQuery2.data,\n      errorMostDonate = _useQuery2.error;\n\n  if (loading || lodingMostDonate) return null;\n  if (error || errorMostDonate) return \"Error! \".concat(error.message);\n  console.log(donateData);\n\n  var active = function active(e) {\n    var recents = document.getElementById(\"most-recents\");\n    var trees = document.getElementById(\"most-trees\");\n\n    if (e.target.id === \"most-recents\") {\n      trees.className = \"clicked\";\n      recents.className = \"\";\n      recents.style.zIndex = 2;\n      trees.style.zIndex = 1;\n      setValue(\"recent\");\n    } else if (e.target.id === \"most-trees\") {\n      recents.className = \"clicked\";\n      trees.className = \"\";\n      trees.style.zIndex = 2;\n      recents.style.zIndex = 1;\n      setValue(\"most\");\n    }\n  };\n\n  var handleSearch = function handleSearch(e) {\n    setSearch(e.target.value);\n  };\n\n  var results = !search ? donateData.get_donations : donateData.get_donations.filter(function (data) {\n    return data.name.toLowerCase().includes(search.toLocaleLowerCase());\n  });\n  var resultsThemost = !search ? mostDonateData.get_most_trees : mostDonateData.get_most_trees.filter(function (data) {\n    return data.name.toLowerCase().includes(search.toLocaleLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LEADERBOARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      align: \"middle\",\n      justify: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"search-box gutter-row\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: search,\n          onChange: handleSearch,\n          className: \"search\",\n          type: \"text\",\n          placeholder: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FaSearch, {\n          className: \"fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        offset: 1,\n        className: \"gutter-row most-recent-trees\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"recent\",\n          id: \"most-recents\",\n          onClick: active,\n          children: \"Most Recents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"most\",\n          id: \"most-trees\",\n          className: \"clicked\",\n          onClick: active,\n          children: \"Most Trees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), value === \"recent\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container user-list\",\n      children: [results.map(function (res) {\n        var tree = res.tree,\n            name = res.name,\n            anonymous = res.anonymous,\n            create_at = res.create_at,\n            user_message = res.user_message;\n        console.log(anonymous);\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"list\",\n          align: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"avatar\",\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 2\n            },\n            md: {\n              span: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/icon1.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-title\",\n              children: anonymous === false ? name : \"Anonymous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-message\",\n              children: user_message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24,\n              offset: 3\n            },\n            md: {\n              span: 7\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: tree === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badge\",\n                children: [tree, \" tree\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badge\",\n                children: [tree, \" trees\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-message\",\n              children: moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"add-tree-btn\",\n          children: \"ADD YOUR TREE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container user-list\",\n      children: [resultsThemost.map(function (res) {\n        var tree = res.tree,\n            name = res.name,\n            anonymous = res.anonymous,\n            create_at = res.create_at,\n            user_message = res.user_message;\n        console.log(anonymous);\n        return /*#__PURE__*/_jsxDEV(Row, {\n          className: \"list\",\n          align: \"middle\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"avatar\",\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 2\n            },\n            md: {\n              span: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/images/list-images/icon1.svg\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: \"auto\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-title\",\n              children: anonymous === false ? name : \"Anonymous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-message\",\n              children: user_message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: {\n              span: 24\n            },\n            sm: {\n              span: 24,\n              offset: 3\n            },\n            md: {\n              span: 7\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: tree === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badge\",\n                children: [tree, \" tree\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, _this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"badge\",\n                children: [tree, \" trees\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-message\",\n              children: moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, _this);\n      }), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#form\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"add-tree-btn\",\n          children: \"ADD YOUR TREE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Leaderboard, \"5mA23qhs+8pg884dc3uRc1O91xA=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = Leaderboard;\nexport default Leaderboard; // import React from \"react\"\n// import TestForm from \"./testForm\"\n// const Leaderboard = () => {\n//   return (\n//     <div>\n//       <TestForm />\n//     </div>\n//   )\n// }\n// export default Leaderboard\n\nvar _c;\n\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"sources":["/home/sovanden/projects/vitaminair.org/va-site/pages/home/leaderBoard.js"],"names":["Row","Col","Input","Button","FaSearch","useQuery","GET_DONATIONS","GET_MOST_DONATIONS","moment","useState","Leaderboard","value","setValue","search","setSearch","loading","donateData","data","error","lodingMostDonate","mostDonateData","errorMostDonate","message","console","log","active","e","recents","document","getElementById","trees","target","id","className","style","zIndex","handleSearch","results","get_donations","filter","name","toLowerCase","includes","toLocaleLowerCase","resultsThemost","get_most_trees","marginTop","map","res","tree","anonymous","create_at","user_message","span","offset","unix","format"],"mappings":"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","sourcesContent":["// import React from 'react'\nimport { Row, Col, Input, Button } from \"antd\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\";\nimport moment from \"moment\";\nimport { useState } from \"react\";\nfunction Leaderboard() {\n  const [value, setValue] = useState(\"recent\");\n  const [search, setSearch] = useState(\"\");\n\n  //=====get Data==========\n  const { loading, data: donateData, error } = useQuery(GET_DONATIONS);\n  const {\n    loading: lodingMostDonate,\n    data: mostDonateData,\n    error: errorMostDonate,\n  } = useQuery(GET_MOST_DONATIONS);\n  if (loading || lodingMostDonate) return null;\n  if (error || errorMostDonate) return `Error! ${error.message}`;\n  console.log(donateData);\n  const active = (e) => {\n    const recents = document.getElementById(\"most-recents\");\n    const trees = document.getElementById(\"most-trees\");\n    if (e.target.id === \"most-recents\") {\n      trees.className = \"clicked\";\n      recents.className = \"\";\n      recents.style.zIndex = 2;\n      trees.style.zIndex = 1;\n      setValue(\"recent\");\n    } else if (e.target.id === \"most-trees\") {\n      recents.className = \"clicked\";\n      trees.className = \"\";\n      trees.style.zIndex = 2;\n      recents.style.zIndex = 1;\n      setValue(\"most\");\n    }\n  };\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n  };\n  const results = !search\n    ? donateData.get_donations\n    : donateData.get_donations.filter((data) =>\n        data.name.toLowerCase().includes(search.toLocaleLowerCase())\n      );\n  const resultsThemost = !search\n    ? mostDonateData.get_most_trees\n    : mostDonateData.get_most_trees.filter((data) =>\n        data.name.toLowerCase().includes(search.toLocaleLowerCase())\n      );\n  return (\n    <div style={{ marginTop: \"50px\" }}>\n      <h1>LEADERBOARD</h1>\n      <Row align=\"middle\" justify=\"center\">\n        <Col className=\"search-box gutter-row\">\n          <Input\n            value={search}\n            onChange={handleSearch}\n            className=\"search\"\n            type=\"text\"\n            placeholder=\"Search\"\n          />\n          <FaSearch className=\"fa-search\" />\n        </Col>\n        <Col offset={1} className=\"gutter-row most-recent-trees\">\n          <button value=\"recent\" id=\"most-recents\" onClick={active}>\n            Most Recents\n          </button>\n          <button\n            value=\"most\"\n            id=\"most-trees\"\n            className=\"clicked\"\n            onClick={active}\n          >\n            Most Trees\n          </button>\n        </Col>\n      </Row>\n      {value === \"recent\" ? (\n        <div className=\"container user-list\">\n          {results.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res;\n            console.log(anonymous);\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col\n                  xs={{ span: 24 }}\n                  sm={{ span: 24, offset: 3 }}\n                  md={{ span: 7 }}\n                >\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {moment\n                      .unix(create_at / 1000)\n                      .format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            );\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      ) : (\n        <div className=\"container user-list\">\n          {resultsThemost.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res;\n            console.log(anonymous);\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col\n                  xs={{ span: 24 }}\n                  sm={{ span: 24, offset: 3 }}\n                  md={{ span: 7 }}\n                >\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {/* {moment.unix(create_at / 1000).format(\"YYYY-MM-DD\")}, */}\n                    {moment\n                      .unix(create_at / 1000)\n                      .format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            );\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Leaderboard;\n// import React from \"react\"\n// import TestForm from \"./testForm\"\n\n// const Leaderboard = () => {\n//   return (\n//     <div>\n//       <TestForm />\n//     </div>\n//   )\n// }\n\n// export default Leaderboard\n"]},"metadata":{},"sourceType":"module"}