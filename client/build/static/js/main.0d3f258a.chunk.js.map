{"version":3,"sources":["components/Navbar.js","graphql/query.js","components/About.js","components/Project.js","graphql/mutaion.js","components/Home/InfoForm.js","components/Home/Activities.js","components/Home/Leaderboard.js","components/Home/Home.js","components/Footer.js","App.js","index.js"],"names":["Navbar","useState","visible","setVisible","onClose","className","to","src","alt","activeClassName","href","onClick","placement","closable","Item","exact","GET_DONATIONS","gql","GET_MOST_DONATIONS","GET_PROJECTS","GET_ABOUTS","GET_MEMBERS","GET_INITATIONS","About","useQuery","aboutLoading","loading","aboutData","data","memberLoading","memberData","style","marginTop","textAlign","dataSource","renderItem","item","justify","get_abouts","map","res","xs","span","lg","xl","title","des","align","gutter","md","sm","width","get_members","image","name","position","Project","error","refetch","contentStyle","height","color","lineHeight","background","autoplay","infinite","autoplaySpeed","get_projects","DONATE_TREES","InfoForm","current","setCurrent","useMutation","donation","refetchMostDonation","Form","useForm","form","tailLayout","wrapperCol","Step1Form","Group","Button","value","initialValue","defaultValue","label","rules","required","message","id","type","placeholder","Step2Form","TextArea","Option","valuePropName","steps","step","content","labelCol","onFinish","values","tree","variables","parseInt","then","a","success","resetFields","console","log","onFinishFailed","errorInfo","length","htmlType","e","preventDefault","Activities","modal1","setModal1","get_initations","xxl","centered","onCancel","footer","margin","Leaderboard","setValue","donateData","lodingMostDonate","mostDonateData","errorMostDonate","active","recents","document","getElementById","trees","target","zIndex","offset","get_donations","anonymous","create_at","user_message","flex","moment","unix","format","get_most_trees","Home","fontSize","fontWeight","controls","Footer","rel","App","path","component","Projects","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0d3f258a.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { NavLink } from \"react-router-dom\"\nimport { Drawer, Menu } from \"antd\"\nimport { FiMenu } from \"react-icons/fi\"\n\nfunction Navbar() {\n  const [visible, setVisible] = useState(false)\n  const showDrawer = () => {\n    setVisible(true)\n  }\n  const onClose = () => {\n    setVisible(false)\n  }\n\n  return (\n    <div className=\"navbar\">\n      <NavLink to=\"/\">\n        <img src=\"/images/logo.png\" alt=\"logo\" />\n      </NavLink>\n      <div className=\"menu\">\n        <NavLink to=\"/projects\" activeClassName=\"is-active\">\n          Projects\n        </NavLink>\n        <NavLink to=\"/about\" activeClassName=\"is-active\">\n          About Us\n        </NavLink>\n        <a href=\"https://t.me/vitaminair\">Community</a>\n      </div>\n\n      <FiMenu onClick={showDrawer} className=\"open-menu-btn\" />\n      <Drawer placement=\"left\" closable={false} onClose={onClose} visible={visible}>\n        <div className=\"navbar\">\n          <img src=\"/images/logo.png\" alt=\"logo\" />{\" \"}\n        </div>\n        <Menu className=\"side-nav\">\n          <Menu.Item onClick={onClose}>\n            <NavLink className=\"sample\" to=\"/\" exact activeClassName=\"is-active\">\n              HOME{\" \"}\n            </NavLink>\n          </Menu.Item>\n\n          <Menu.Item onClick={onClose}>\n            {\" \"}\n            <NavLink to=\"/projects\" exact activeClassName=\"is-active\">\n              PROJECT\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item onClick={onClose}>\n            <NavLink to=\"/about\" activeClassName=\"is-active\">\n              ABOUT US\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item onClick={onClose}>\n            {\" \"}\n            <a href=\"https://t.me/vitaminair\">COMMUNITY</a>{\" \"}\n          </Menu.Item>\n        </Menu>\n      </Drawer>\n    </div>\n  )\n}\n\nexport default Navbar\n","import { gql } from \"@apollo/client\"\n\nconst GET_DONATIONS = gql`\n  query {\n    get_donations {\n      tree\n      name\n      create_at\n      user_message\n      anonymous\n    }\n  }\n`\nconst GET_MOST_DONATIONS = gql`\n  query {\n    get_most_trees {\n      tree\n      name\n      create_at\n      user_message\n      anonymous\n    }\n  }\n`\nconst GET_PROJECTS = gql`\n  query {\n    get_projects {\n      id\n      title\n      des\n      image\n      create_at\n    }\n  }\n`\nconst GET_ABOUTS = gql`\n  query {\n    get_abouts {\n      id\n      title\n      des\n      create_at\n    }\n  }\n`\nconst GET_MEMBERS = gql`\n  query {\n    get_members {\n      id\n      name\n      image\n      create_at\n      position\n    }\n  }\n`\nconst GET_INITATIONS = gql`\n  query {\n    get_initations {\n      id\n      title\n      des\n      image\n      create_at\n    }\n  }\n`\nexport {\n  GET_DONATIONS,\n  GET_MOST_DONATIONS,\n  GET_ABOUTS,\n  GET_INITATIONS,\n  GET_PROJECTS,\n  GET_MEMBERS,\n}\n","import { List, Row, Col } from \"antd\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_ABOUTS, GET_MEMBERS } from \"../graphql/query\"\n\nfunction About() {\n  const data = [\n    \"Sustainability, peace, love, harmony, sharing, growth, and abundance, with a focus on setting a good example for generations into the future.\",\n    \"To live together in a collaborative community, encouraging each other and our surrounding communities to live in harmony with each other and our natural environment.\",\n    \"To grow in size and recognition to influence others around the world by example, education, and research.\",\n    \"To facilitate workshops, adventure tours, and retreats that promote personal growth and sustainable lifestyles.\",\n    \"To offer re-education and employment opportunities for local families engaged in illegal forest activities.\",\n    \"To discover and create innovative business and employment opportunities for Cambodian youths.\",\n  ]\n  const { loading: aboutLoading, data: aboutData } = useQuery(GET_ABOUTS)\n  const { loading: memberLoading, data: memberData } = useQuery(GET_MEMBERS)\n  if (aboutLoading || memberLoading) return null\n\n  return (\n    <div>\n      <div className=\"about-banner\">\n        <h1>About Us</h1>\n      </div>\n      <div className=\"container\" style={{ marginTop: \"30px\" }}>\n        <div className=\"objective\">\n          <h2 style={{ textAlign: \"left\" }}>OUR OBJECTIVE</h2>\n          <img src=\"/images/about/Rectangle.png\" alt=\"\" />\n          <List\n            dataSource={data}\n            renderItem={(item) => (\n              <List.Item>\n                <p>{item}</p>\n              </List.Item>\n            )}\n          />\n        </div>\n        <div className=\"about\">\n          <Row className=\"about-card\" justify=\"center\">\n            {aboutData.get_abouts.map((res) => {\n              return (\n                <Col\n                  xs={{ span: 24 }}\n                  lg={{ span: 11 }}\n                  xl={{ span: 7 }}\n                  className=\"card\"\n                >\n                  <img src=\"/images/about/flower.png\" alt=\"\" />\n                  <h2>{res.title}</h2>\n                  <p>{res.des}</p>\n                </Col>\n              )\n            })}\n          </Row>\n\n          <h1 style={{ marginTop: \"30px\" }}>OUR PARTNERS</h1>\n          <p style={{ textAlign: \"center\" }}>\n            We're especially pleased to have built strategic partnerships with\n            forward thinking leaders in the business world.\n          </p>\n\n          <Row\n            className=\"partner\"\n            align=\"middle\"\n            justify=\"center\"\n            gutter={{ xs: 0, md: 40 }}\n          >\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/smallworld.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/koompi.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/sabay.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img\n                style={{ width: \"120px\" }}\n                src=\"/images/partner/doer.png\"\n                alt=\"logo\"\n              />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 5 }}\n              xl={{ span: 2 }}\n              className=\"gutter-row\"\n            >\n              <img\n                style={{ width: \"80px\" }}\n                src=\"/images/partner/isi-group.png\"\n                alt=\"logo\"\n              />\n            </Col>\n          </Row>\n          <div className=\"team-member\">\n            <h1>TEAM MEMBER</h1>\n            <Row gutter={[8, 8]}>\n              {memberData.get_members.map((res) => {\n                return (\n                  <Col xs={24} md={8} lg={6}>\n                    <div className=\"member\">\n                      <img\n                        src={\"http://localhost:3500/public/uploads/\" + res.image}\n                      />\n                      <h3>{res.name}</h3>\n                      <p>{res.position}</p>\n                    </div>\n                  </Col>\n                )\n              })}\n              {/* <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col> */}\n            </Row>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import { Row, Col } from \"antd\"\nimport { Carousel } from \"antd\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_PROJECTS } from \"../graphql/query\"\nfunction Project() {\n  const { loading, data, error, refetch } = useQuery(GET_PROJECTS)\n  if (loading) return null\n  const contentStyle = {\n    height: \"573px\",\n    color: \"#fff\",\n    lineHeight: \"500px\",\n    textAlign: \"center\",\n    background: \"#057630\",\n  }\n  return (\n    <div>\n      <Carousel autoplay infinite autoplaySpeed={2000}>\n        <div>\n          <h3 style={contentStyle}>1</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>2</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>3</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n      <div className=\"container\">\n        <h1>PROJECTS</h1>\n        <p style={{ textAlign: \"center\" }}>\n          We're especially pleased to have built strategic partnerships with forward\n          thinking leaders in the business world.\n        </p>\n        <Row className=\"projects\" justify=\"center\">\n          {data.get_projects.map((res) => {\n            return (\n              <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n                <img src={\"http://localhost:3500/public/uploads/\" + res.image} />\n                <div className=\"info\">\n                  <h3>{res.title}</h3>\n                  <p>{res.des}</p>\n                </div>\n              </Col>\n            )\n          })}\n          {/* <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-ecotour.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>ECO-TOURISM</h3>\n              <p>\n                Bring everyone closer to nature, instilling love, healthy and\n                sustainable relationships among people.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-water.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>VITAMINWATER</h3>\n              <p>\n                Capture purified water from air, building water and irrigation\n                systems for abundance and prosperity.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-seedbombing.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>SEED BOMBING</h3>\n              <p>\n                Combine tradition with ecological science and technology for enhanced\n                productivity.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-reforestation.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>REFORESTATION</h3>\n              <p>\n                Reforest and maintain at least 60% of Cambodian national forest\n                cover.\n              </p>\n            </div>\n          </Col> */}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Project\n","import { gql } from \"@apollo/client\"\n\nconst DONATE_TREES = gql`\n  mutation(\n    $tree: Int!\n    $team: String!\n    $name: String!\n    $email: String!\n    $phone: String!\n    $user_message: String!\n    $selectType: String!\n    $anonymous: Boolean\n    $public: Boolean\n  ) {\n    donation(\n      tree: $tree\n      team: $team\n      name: $name\n      email: $email\n      phone: $phone\n      user_message: $user_message\n      selectType: $selectType\n      anonymous: $anonymous\n      public: $public\n    ) {\n      message\n    }\n  }\n`\n\nexport { DONATE_TREES }\n","import React, { useState } from \"react\"\nimport {\n  Divider,\n  Row,\n  Col,\n  Button,\n  Input,\n  Form,\n  Checkbox,\n  Select,\n  Radio,\n  message,\n} from \"antd\"\nimport { DONATE_TREES } from \"../../graphql/mutaion\"\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\"\nimport { useQuery, useMutation } from \"@apollo/client\"\n\nfunction InfoForm() {\n  const [current, setCurrent] = useState(0)\n  const [donation] = useMutation(DONATE_TREES)\n  const { refetch } = useQuery(GET_DONATIONS)\n  const { refetch: refetchMostDonation } = useQuery(GET_MOST_DONATIONS)\n\n  const [form] = Form.useForm()\n  const next = (e) => {\n    e.preventDefault()\n    setCurrent(current + 1)\n  }\n\n  //go to prev step in form\n  const prev = (e) => {\n    e.preventDefault()\n    setCurrent(current - 1)\n  }\n\n  // const amountActive = (e) => {\n  //   e.preventDefault()\n  //   // console.log(e.target.parentElement)\n  //   const btns = Array.from(document.getElementsByClassName(\"tree-amount\"))\n  //   console.log(btns)\n  //   console.log(e.target)\n  //   btns.forEach((btn) => {\n  //     if (btn === e.target) {\n  //       btn.className += \" amount-active\"\n  //     } else if (btn === e.target.parentElement) {\n  //       btn.className += \" amount-active\"\n  //     } else {\n  //       btn.className = \"tree-amount\"\n  //     }\n  //   })\n  // }\n  //form\n  const layout = {\n    labelCol: {\n      span: 24,\n    },\n    wrapperCol: {\n      span: 24,\n    },\n  }\n  const tailLayout = {\n    wrapperCol: {\n      span: 24,\n    },\n  }\n  const onFinish = (values) => {\n    const { tree } = values\n    donation({\n      variables: {\n        ...values,\n        tree: parseInt(tree),\n      },\n    }).then(async (res) => {\n      message.success(\" Donation Successful\")\n      await refetch()\n      await refetchMostDonation()\n      form.resetFields()\n    })\n    console.log(values)\n  }\n\n  const onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo)\n  }\n  //form steps\n\n  const Step1Form = () => {\n    return (\n      <>\n        <div>\n          <center>\n            <h2 className=\"top-title\">JOIN VitaminAir</h2>\n            <p className=\"join-desc\">\n              to Plant trees and Educate the next generation\n            </p>\n          </center>\n          <Row gutter={[12, 12]}>\n            <Col span={12}>\n              {/* <Button\n                  onChange={(e) => setValue(e.target.value)}\n                  className=\"tree-amount\"\n                  onClick={amountActive}\n                >\n                  10,000 riel\n                </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={5}>\n                    <span className=\"text-radio-button\">5 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount amount-active\" onClick={amountActive}>\n                20,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\" initialValue={20}>\n                <Radio.Group defaultValue={20}>\n                  <Radio.Button className=\"radio-button\" value={20}>\n                    <span className=\"text-radio-button \">20 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount\" onClick={amountActive}>\n                30,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={50}>\n                    <span className=\"text-radio-button \">50 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              {/* <Button className=\"tree-amount\" onClick={amountActive}>\n                40,000 riel\n              </Button> */}\n              <Form.Item name=\"tree\">\n                <Radio.Group>\n                  <Radio.Button className=\"radio-button\" value={100}>\n                    <span className=\"text-radio-button \">100 trees</span>\n                  </Radio.Button>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item name=\"tree\" label=\"Other Amount\" initialValue={20}>\n            <Input\n              rules={[{ required: true, message: \"Please Select or Input Amount\" }]}\n              className=\"input-amount\"\n              id=\"tree-amount\"\n              type=\"number\"\n              placeholder=\"Other Amount\"\n            />\n          </Form.Item>\n          <Divider />\n        </div>\n      </>\n    )\n  }\n  const Step2Form = () => {\n    return (\n      <>\n        <h2 style={{ textAlign: \"center\" }}>Detail</h2>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"DISPLAY NAME\"\n          name=\"name\"\n          rules={[{ required: true, message: \"Please input your username!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"EMAIL ADDRESS\"\n          name=\"email\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your email!\",\n              type: \"email\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          className=\"details-input\"\n          label=\"MOBILE PHONE\"\n          name=\"phone\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your Phone Number!\",\n            },\n          ]}\n          // rules={[{ type: \"number\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <p>\n          optional; by entering a phone number, you consent to receive text messages\n        </p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"TEAM\"\n          name=\"team\"\n          rules={[{ required: true, message: \"Please input your team!\" }]}\n        >\n          <Input />\n        </Form.Item>\n        <p>optional</p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"MESSAGE\"\n          name=\"user_message\"\n          rules={[{ required: true, message: \"Please input your message!\" }]}\n        >\n          <Input.TextArea />\n        </Form.Item>\n        <p>optional; for display on the website</p>\n\n        <Form.Item\n          className=\"details-input\"\n          label=\"Select\"\n          name=\"selectType\"\n          rules={[{ required: true, message: \"Please selecet one!\" }]}\n        >\n          <Select>\n            <Select.Option value=\"Tree\">Tree</Select.Option>\n            <Select.Option value=\"School\">School</Select.Option>\n            <Select.Option value=\"Other\">Other</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          className=\"details-input\"\n          {...tailLayout}\n          name=\"public\"\n          valuePropName=\"checked\"\n        >\n          <Checkbox>\n            {\" \"}\n            <span style={{ color: \"#0cb04a\" }}> YES!</span> I want periodic updates\n            on #TeamTrees{\" \"}\n          </Checkbox>\n        </Form.Item>\n        <Form.Item\n          className=\"details-input\"\n          {...tailLayout}\n          name=\"anonymous\"\n          valuePropName=\"checked\"\n        >\n          <Checkbox>Please keep my donation anonymous </Checkbox>\n        </Form.Item>\n      </>\n    )\n  }\n  const steps = [\n    {\n      step: 1,\n      title: \"First\",\n      content: <Step1Form />,\n    },\n    {\n      step: 2,\n      title: \"Second\",\n      content: <Step2Form />,\n    },\n  ]\n  return (\n    // <Step1Form>\n    <div className=\"center container\">\n      <div id=\"form\" className=\"form\">\n        <Form\n          form={form}\n          style={{ textAlign: \"left\" }}\n          {...layout}\n          name=\"basic\"\n          // initialValues={{ remember: true }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          {steps.map((item) => (\n            <div\n              className={`steps-content ${item.step !== current + 1 && \"hidden\"}`}\n            >\n              {item.content}\n            </div>\n          ))}\n          <div className=\"steps-action\">\n            {current < steps.length - 1 && (\n              <div className=\"btn-position\">\n                <Button\n                  htmlType=\"submit\"\n                  onClick={next}\n                  type=\"primary\"\n                  className=\"next-btn\"\n                >\n                  Next\n                </Button>\n              </div>\n            )}\n            {current === steps.length - 1 && (\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  style={{ width: \"100%\" }}\n                  className=\"next-btn\"\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            )}\n            {current > 0 && (\n              <Button className=\"prev\" onClick={prev}>\n                Previous\n              </Button>\n            )}\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default InfoForm\n","import { useState } from \"react\"\nimport { Row, Col, Modal, Spin } from \"antd\"\nimport { IoEye } from \"react-icons/io5\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_INITATIONS } from \"../../graphql/query\"\n\nfunction Activities() {\n  const [modal1, setModal1] = useState(false)\n  const [modal2, setModal2] = useState(false)\n  const [modal3, setModal3] = useState(false)\n  const { loading, data, error, refetch } = useQuery(GET_INITATIONS)\n  if (loading) return null\n  return (\n    <div>\n      <h1>OUR INITIATION</h1>\n\n      <div className=\"container activities\">\n        <div className=\"card\">\n          <Row>\n            {data.get_initations.map((res) => {\n              return (\n                <Col xs={{ span: 24 }} md={{ span: 12 }} xl={{ span: 24 }}>\n                  <Row align=\"middle\" className=\"cardbox\" gutter={[20, 20]}>\n                    <Col xs={{ span: 24 }} xl={{ span: 9 }} xxl={{ span: 9 }}>\n                      <img\n                        style={{ width: \"100%\" }}\n                        src={\"http://localhost:3500/public/uploads/\" + res.image}\n                        alt=\"activities\"\n                      />\n                      <div className=\"eye-icon\" onClick={() => setModal1(true)}>\n                        <IoEye className=\"eye\" />\n                      </div>\n                    </Col>\n                    <Modal\n                      title={res.title}\n                      centered\n                      visible={modal1}\n                      // onOk={() => setVisible(false)}\n                      onCancel={() => setModal1(false)}\n                      width={1000}\n                      footer=\"\"\n                    >\n                      <p>{res.des}</p>\n                    </Modal>\n                    <Col xs={{ span: 24 }} xl={{ span: 14 }} xxl={{ span: 15 }}>\n                      <h3>{res.title}</h3>\n                      <p style={{ margin: \"15px 0\" }}>{res.des}</p>\n                    </Col>\n                  </Row>\n                </Col>\n              )\n            })}\n          </Row>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Activities\n","// import React from 'react'\nimport { Row, Col, Input, Button, TreeSelect } from \"antd\"\nimport { FaSearch } from \"react-icons/fa\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\"\nimport moment from \"moment\"\nimport { useState } from \"react\"\nfunction Leaderboard() {\n  const [value, setValue] = useState(\"recent\")\n  //=====get Data==========\n  const { loading, data: donateData, error } = useQuery(GET_DONATIONS)\n  const {\n    loading: lodingMostDonate,\n    data: mostDonateData,\n    error: errorMostDonate,\n  } = useQuery(GET_MOST_DONATIONS)\n  if (loading || lodingMostDonate) return null\n  if (error || errorMostDonate) return `Error! ${error.message}`\n  console.log(donateData)\n  const active = (e) => {\n    const recents = document.getElementById(\"most-recents\")\n    const trees = document.getElementById(\"most-trees\")\n    if (e.target.id === \"most-recents\") {\n      trees.className = \"clicked\"\n      recents.className = \"\"\n      recents.style.zIndex = 2\n      trees.style.zIndex = 1\n      setValue(\"recent\")\n    } else if (e.target.id === \"most-trees\") {\n      recents.className = \"clicked\"\n      trees.className = \"\"\n      trees.style.zIndex = 2\n      recents.style.zIndex = 1\n      setValue(\"most\")\n    }\n  }\n  return (\n    <div style={{ marginTop: \"50px\" }}>\n      <h1>LEADERBOARD</h1>\n      <Row align=\"middle\" justify=\"center\">\n        <Col className=\"search-box gutter-row\">\n          <Input className=\"search\" type=\"text\" placeholder=\"Search\" />\n          <FaSearch className=\"fa-search\" />\n        </Col>\n        <Col offset={1} className=\"gutter-row most-recent-trees\">\n          <button value=\"recent\" id=\"most-recents\" onClick={active}>\n            Most Recents\n          </button>\n          <button value=\"most\" id=\"most-trees\" className=\"clicked\" onClick={active}>\n            Most Trees\n          </button>\n        </Col>\n      </Row>\n      {value === \"recent\" ? (\n        <div className=\"container user-list\">\n          {donateData.get_donations.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      ) : (\n        <div className=\"container user-list\">\n          {mostDonateData.get_most_trees.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {/* {moment.unix(create_at / 1000).format(\"YYYY-MM-DD\")}, */}\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Leaderboard\n// import React from \"react\"\n// import TestForm from \"./testForm\"\n\n// const Leaderboard = () => {\n//   return (\n//     <div>\n//       <TestForm />\n//     </div>\n//   )\n// }\n\n// export default Leaderboard\n","import { Row, Col, Button } from \"antd\"\nimport InfoForm from \"./InfoForm\"\nimport Activities from \"./Activities\"\nimport Leaderboard from \"./Leaderboard\"\n\nfunction Home() {\n  return (\n    <>\n      <img className=\"cloud\" src=\"/images/cloud2.png\" alt=\"cloud\" />\n      <img className=\"cloud2\" src=\"/images/cloud2.png\" alt=\"cloud\" />\n      <img className=\"cloud3\" src=\"/images/cloud2.png\" alt=\"cloud\" />\n      <div className=\"container\">\n        <Row className=\"banner\" justify=\"space-between\" align=\"middle\">\n          <Col\n            className=\"text\"\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            lg={{ span: 10 }}\n            xl={{ span: 10 }}\n          >\n            <p style={{ fontSize: \"22px\", color: \"#0D330A\", fontWeight: \"700\" }}>\n              In search of\n            </p>\n            <h2>The Next Small Things</h2>\n            <p style={{ margin: \"20px 0\" }}>\n              Protect, preserve, and restore our rain forests for generations ahead.\n              Protect, preserve, and restore our rain forests for generations ahead.\n            </p>\n            <a href=\"#form\">\n              <Button type=\"primary\" className=\"join-us-btn\">\n                JOIN US\n              </Button>\n            </a>\n          </Col>\n          <Col\n            className=\"video\"\n            xs={{ span: 24 }}\n            sm={{ span: 24 }}\n            lg={{ span: 12 }}\n            xl={{ span: 12 }}\n          >\n            <video src=\"/video.mp4\" controls></video>\n          </Col>\n        </Row>\n      </div>\n      <div className=\"big-banner\"></div>\n\n      {/* <img className=\"big-banner\" style={{ width: \"100%\" }} src=\"/images/big-header.png\" alt=\"\" /> */}\n\n      <InfoForm />\n      <Leaderboard />\n      <Activities />\n    </>\n  )\n}\n\nexport default Home\n","import { Row, Col } from \"antd\"\nimport {\n  FaFacebookF,\n  FaYoutube,\n  FaLinkedinIn,\n  FaTelegramPlane,\n} from \"react-icons/fa\"\n\nexport default function Footer() {\n  return (\n    <>\n      <img style={{ width: \"100%\" }} src=\"/images/footer.png\" alt=\"footer\" />\n      <Row className=\"footer\" align=\"middle\" justify=\"space-between\">\n        <Col>\n          <p>Contact us: info@vitaminair.org</p>\n        </Col>\n        <Col>\n          <a\n            href=\"https://web.facebook.com/VitaminAirHome\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FaFacebookF />\n          </a>\n          <a\n            href=\"https://www.linkedin.com/company/vitaminair/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FaLinkedinIn />\n          </a>\n\n          <a\n            href=\"https://www.youtube.com/channel/UCL_dER70Hn-OncQ52BXQYLg\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <FaYoutube />\n          </a>\n\n          <a href=\"https://t.me/vitaminair\" target=\"_blank\" rel=\"noreferrer\">\n            <FaTelegramPlane />\n          </a>\n        </Col>\n      </Row>\n    </>\n  )\n}\n","import \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Navbar, About, Projects, Home, Footer } from \"./components\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/projects\" exact component={Projects} />\n        </Switch>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\n\nconst client = new ApolloClient({\n  // uri: \"http://vabackend.vitaminair.org/graphql\",\n  uri: \"http://localhost:3500/graphql\",\n  cache: new InMemoryCache(),\n})\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}