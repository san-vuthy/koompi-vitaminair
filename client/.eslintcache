[{"/home/sovanden/projects/vitaminair.org/client/src/index.js":"1","/home/sovanden/projects/vitaminair.org/client/src/App.js":"2","/home/sovanden/projects/vitaminair.org/client/src/components/index.js":"3","/home/sovanden/projects/vitaminair.org/client/src/components/Navbar.js":"4","/home/sovanden/projects/vitaminair.org/client/src/components/Footer.js":"5","/home/sovanden/projects/vitaminair.org/client/src/components/Project.js":"6","/home/sovanden/projects/vitaminair.org/client/src/components/About.js":"7","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Home.js":"8","/home/sovanden/projects/vitaminair.org/client/src/components/Home/InfoForm.js":"9","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Activities.js":"10","/home/sovanden/projects/vitaminair.org/client/src/graphql/query.js":"11","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Leaderboard.js":"12","/home/sovanden/projects/vitaminair.org/client/src/graphql/mutaion.js":"13"},{"size":511,"mtime":1615278867772,"results":"14","hashOfConfig":"15"},{"size":559,"mtime":1615216405268,"results":"16","hashOfConfig":"15"},{"size":227,"mtime":1615216405298,"results":"17","hashOfConfig":"15"},{"size":1828,"mtime":1615216405271,"results":"18","hashOfConfig":"15"},{"size":1164,"mtime":1615216405271,"results":"19","hashOfConfig":"15"},{"size":3226,"mtime":1615263729017,"results":"20","hashOfConfig":"15"},{"size":6637,"mtime":1615263729017,"results":"21","hashOfConfig":"15"},{"size":1777,"mtime":1615216405271,"results":"22","hashOfConfig":"15"},{"size":9272,"mtime":1615263729017,"results":"23","hashOfConfig":"15"},{"size":2297,"mtime":1615279052470,"results":"24","hashOfConfig":"15"},{"size":935,"mtime":1615263729017,"results":"25","hashOfConfig":"15"},{"size":5288,"mtime":1615216405271,"results":"26","hashOfConfig":"15"},{"size":554,"mtime":1615216405298,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x9edt6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/sovanden/projects/vitaminair.org/client/src/index.js",[],"/home/sovanden/projects/vitaminair.org/client/src/App.js",[],["58","59"],"/home/sovanden/projects/vitaminair.org/client/src/components/index.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Navbar.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Footer.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Project.js",["60","61","62"],"import { Row, Col } from \"antd\"\nimport { Carousel } from \"antd\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_PROJECTS } from \"../graphql/query\"\nfunction Project() {\n  const { loading, data, error, refetch } = useQuery(GET_PROJECTS)\n  if (loading) return null\n  const contentStyle = {\n    height: \"573px\",\n    color: \"#fff\",\n    lineHeight: \"500px\",\n    textAlign: \"center\",\n    background: \"#057630\",\n  }\n  return (\n    <div>\n      <Carousel autoplay infinite autoplaySpeed={2000}>\n        <div>\n          <h3 style={contentStyle}>1</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>2</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>3</h3>\n        </div>\n        <div>\n          <h3 style={contentStyle}>4</h3>\n        </div>\n      </Carousel>\n      <div className=\"container\">\n        <h1>PROJECTS</h1>\n        <p style={{ textAlign: \"center\" }}>\n          We're especially pleased to have built strategic partnerships with forward\n          thinking leaders in the business world.\n        </p>\n        <Row className=\"projects\" justify=\"center\">\n          {data.get_projects.map((res) => {\n            return (\n              <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n                <img src={\"http://localhost:3500/public/uploads/\" + res.image} />\n                <div className=\"info\">\n                  <h3>{res.title}</h3>\n                  <p>{res.des}</p>\n                </div>\n              </Col>\n            )\n          })}\n          {/* <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-ecotour.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>ECO-TOURISM</h3>\n              <p>\n                Bring everyone closer to nature, instilling love, healthy and\n                sustainable relationships among people.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-water.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>VITAMINWATER</h3>\n              <p>\n                Capture purified water from air, building water and irrigation\n                systems for abundance and prosperity.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-seedbombing.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>SEED BOMBING</h3>\n              <p>\n                Combine tradition with ecological science and technology for enhanced\n                productivity.\n              </p>\n            </div>\n          </Col>\n          <Col xs={{ span: 24 }} lg={{ span: 11 }} className=\"project-list\">\n            <img src=\"/images/projects/va-reforestation.png\" alt=\"\" />\n            <div className=\"info\">\n              <h3>REFORESTATION</h3>\n              <p>\n                Reforest and maintain at least 60% of Cambodian national forest\n                cover.\n              </p>\n            </div>\n          </Col> */}\n        </Row>\n      </div>\n    </div>\n  )\n}\n\nexport default Project\n","/home/sovanden/projects/vitaminair.org/client/src/components/About.js",["63"],"import { List, Row, Col } from \"antd\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_ABOUTS, GET_MEMBERS } from \"../graphql/query\"\n\nfunction About() {\n  const data = [\n    \"Sustainability, peace, love, harmony, sharing, growth, and abundance, with a focus on setting a good example for generations into the future.\",\n    \"To live together in a collaborative community, encouraging each other and our surrounding communities to live in harmony with each other and our natural environment.\",\n    \"To grow in size and recognition to influence others around the world by example, education, and research.\",\n    \"To facilitate workshops, adventure tours, and retreats that promote personal growth and sustainable lifestyles.\",\n    \"To offer re-education and employment opportunities for local families engaged in illegal forest activities.\",\n    \"To discover and create innovative business and employment opportunities for Cambodian youths.\",\n  ]\n  const { loading: aboutLoading, data: aboutData } = useQuery(GET_ABOUTS)\n  const { loading: memberLoading, data: memberData } = useQuery(GET_MEMBERS)\n  if (aboutLoading || memberLoading) return null\n\n  return (\n    <div>\n      <div className=\"about-banner\">\n        <h1>About Us</h1>\n      </div>\n      <div className=\"container\" style={{ marginTop: \"30px\" }}>\n        <div className=\"objective\">\n          <h2 style={{ textAlign: \"left\" }}>OUR OBJECTIVE</h2>\n          <img src=\"/images/about/Rectangle.png\" alt=\"\" />\n          <List\n            dataSource={data}\n            renderItem={(item) => (\n              <List.Item>\n                <p>{item}</p>\n              </List.Item>\n            )}\n          />\n        </div>\n        <div className=\"about\">\n          <Row className=\"about-card\" justify=\"center\">\n            {aboutData.get_abouts.map((res) => {\n              return (\n                <Col\n                  xs={{ span: 24 }}\n                  lg={{ span: 11 }}\n                  xl={{ span: 7 }}\n                  className=\"card\"\n                >\n                  <img src=\"/images/about/flower.png\" alt=\"\" />\n                  <h2>{res.title}</h2>\n                  <p>{res.des}</p>\n                </Col>\n              )\n            })}\n          </Row>\n\n          <h1 style={{ marginTop: \"30px\" }}>OUR PARTNERS</h1>\n          <p style={{ textAlign: \"center\" }}>\n            We're especially pleased to have built strategic partnerships with\n            forward thinking leaders in the business world.\n          </p>\n\n          <Row\n            className=\"partner\"\n            align=\"middle\"\n            justify=\"center\"\n            gutter={{ xs: 0, md: 40 }}\n          >\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/smallworld.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/koompi.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img src=\"/images/partner/sabay.png\" alt=\"logo\" />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 7 }}\n              xl={{ span: 4 }}\n              className=\"gutter-row\"\n            >\n              <img\n                style={{ width: \"120px\" }}\n                src=\"/images/partner/doer.png\"\n                alt=\"logo\"\n              />\n            </Col>\n            <Col\n              xs={{ span: 12 }}\n              sm={{ span: 5 }}\n              xl={{ span: 2 }}\n              className=\"gutter-row\"\n            >\n              <img\n                style={{ width: \"80px\" }}\n                src=\"/images/partner/isi-group.png\"\n                alt=\"logo\"\n              />\n            </Col>\n          </Row>\n          <div className=\"team-member\">\n            <h1>TEAM MEMBER</h1>\n            <Row gutter={[8, 8]}>\n              {memberData.get_members.map((res) => {\n                return (\n                  <Col xs={24} md={8} lg={6}>\n                    <div className=\"member\">\n                      <img\n                        src={\"http://localhost:3500/public/uploads/\" + res.image}\n                      />\n                      <h3>{res.name}</h3>\n                      <p>{res.position}</p>\n                    </div>\n                  </Col>\n                )\n              })}\n              {/* <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col>\n              <Col xs={24} md={8} lg={6}>\n                <div className=\"member\">\n                  <img src=\"/images/member/member.png\" alt=\"\" />\n                  <h3>MR Ajfdjkfa</h3>\n                  <p>Developer</p>\n                </div>\n              </Col> */}\n            </Row>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Home.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/InfoForm.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/Activities.js",["64","65","66","67","68","69","70"],"/home/sovanden/projects/vitaminair.org/client/src/graphql/query.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/Leaderboard.js",["71"],"// import React from 'react'\nimport { Row, Col, Input, Button, TreeSelect } from \"antd\"\nimport { FaSearch } from \"react-icons/fa\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\"\nimport moment from \"moment\"\nimport { useState } from \"react\"\nfunction Leaderboard() {\n  const [value, setValue] = useState(\"recent\")\n  //=====get Data==========\n  const { loading, data: donateData, error } = useQuery(GET_DONATIONS)\n  const {\n    loading: lodingMostDonate,\n    data: mostDonateData,\n    error: errorMostDonate,\n  } = useQuery(GET_MOST_DONATIONS)\n  if (loading || lodingMostDonate) return null\n  if (error || errorMostDonate) return `Error! ${error.message}`\n  console.log(donateData)\n  const active = (e) => {\n    const recents = document.getElementById(\"most-recents\")\n    const trees = document.getElementById(\"most-trees\")\n    if (e.target.id === \"most-recents\") {\n      trees.className = \"clicked\"\n      recents.className = \"\"\n      recents.style.zIndex = 2\n      trees.style.zIndex = 1\n      setValue(\"recent\")\n    } else if (e.target.id === \"most-trees\") {\n      recents.className = \"clicked\"\n      trees.className = \"\"\n      trees.style.zIndex = 2\n      recents.style.zIndex = 1\n      setValue(\"most\")\n    }\n  }\n  return (\n    <div style={{ marginTop: \"50px\" }}>\n      <h1>LEADERBOARD</h1>\n      <Row align=\"middle\" justify=\"center\">\n        <Col className=\"search-box gutter-row\">\n          <Input className=\"search\" type=\"text\" placeholder=\"Search\" />\n          <FaSearch className=\"fa-search\" />\n        </Col>\n        <Col offset={1} className=\"gutter-row most-recent-trees\">\n          <button value=\"recent\" id=\"most-recents\" onClick={active}>\n            Most Recents\n          </button>\n          <button value=\"most\" id=\"most-trees\" className=\"clicked\" onClick={active}>\n            Most Trees\n          </button>\n        </Col>\n      </Row>\n      {value === \"recent\" ? (\n        <div className=\"container user-list\">\n          {donateData.get_donations.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      ) : (\n        <div className=\"container user-list\">\n          {mostDonateData.get_most_trees.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {/* {moment.unix(create_at / 1000).format(\"YYYY-MM-DD\")}, */}\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Leaderboard\n// import React from \"react\"\n// import TestForm from \"./testForm\"\n\n// const Leaderboard = () => {\n//   return (\n//     <div>\n//       <TestForm />\n//     </div>\n//   )\n// }\n\n// export default Leaderboard\n","/home/sovanden/projects/vitaminair.org/client/src/graphql/mutaion.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":26,"nodeType":"78","messageId":"79","endLine":6,"endColumn":31},{"ruleId":"76","severity":1,"message":"80","line":6,"column":33,"nodeType":"78","messageId":"79","endLine":6,"endColumn":40},{"ruleId":"81","severity":1,"message":"82","line":41,"column":17,"nodeType":"83","endLine":41,"endColumn":82},{"ruleId":"81","severity":1,"message":"82","line":122,"column":23,"nodeType":"83","endLine":124,"endColumn":25},{"ruleId":"76","severity":1,"message":"84","line":2,"column":27,"nodeType":"78","messageId":"79","endLine":2,"endColumn":31},{"ruleId":"76","severity":1,"message":"85","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":16},{"ruleId":"76","severity":1,"message":"86","line":9,"column":18,"nodeType":"78","messageId":"79","endLine":9,"endColumn":27},{"ruleId":"76","severity":1,"message":"87","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":16},{"ruleId":"76","severity":1,"message":"88","line":10,"column":18,"nodeType":"78","messageId":"79","endLine":10,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":11,"column":26,"nodeType":"78","messageId":"79","endLine":11,"endColumn":31},{"ruleId":"76","severity":1,"message":"80","line":11,"column":33,"nodeType":"78","messageId":"79","endLine":11,"endColumn":40},{"ruleId":"76","severity":1,"message":"89","line":2,"column":35,"nodeType":"78","messageId":"79","endLine":2,"endColumn":45},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'refetch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Spin' is defined but never used.","'modal2' is assigned a value but never used.","'setModal2' is assigned a value but never used.","'modal3' is assigned a value but never used.","'setModal3' is assigned a value but never used.","'TreeSelect' is defined but never used.","no-global-assign","no-unsafe-negation"]