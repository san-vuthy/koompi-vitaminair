[{"/home/sovanden/projects/vitaminair.org/client/src/index.js":"1","/home/sovanden/projects/vitaminair.org/client/src/App.js":"2","/home/sovanden/projects/vitaminair.org/client/src/components/index.js":"3","/home/sovanden/projects/vitaminair.org/client/src/components/About.js":"4","/home/sovanden/projects/vitaminair.org/client/src/components/Navbar.js":"5","/home/sovanden/projects/vitaminair.org/client/src/components/Footer.js":"6","/home/sovanden/projects/vitaminair.org/client/src/components/Project.js":"7","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Home.js":"8","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Leaderboard.js":"9","/home/sovanden/projects/vitaminair.org/client/src/components/Home/InfoForm.js":"10","/home/sovanden/projects/vitaminair.org/client/src/components/Home/Activities.js":"11","/home/sovanden/projects/vitaminair.org/client/src/graphql/query.js":"12","/home/sovanden/projects/vitaminair.org/client/src/graphql/mutaion.js":"13"},{"size":512,"mtime":1614913000866,"results":"14","hashOfConfig":"15"},{"size":559,"mtime":1614428111694,"results":"16","hashOfConfig":"15"},{"size":227,"mtime":1614428111700,"results":"17","hashOfConfig":"15"},{"size":6637,"mtime":1614914570081,"results":"18","hashOfConfig":"15"},{"size":1828,"mtime":1614428111697,"results":"19","hashOfConfig":"15"},{"size":1164,"mtime":1614430721658,"results":"20","hashOfConfig":"15"},{"size":3226,"mtime":1614913972270,"results":"21","hashOfConfig":"15"},{"size":1777,"mtime":1614428111694,"results":"22","hashOfConfig":"15"},{"size":5288,"mtime":1614430721661,"results":"23","hashOfConfig":"15"},{"size":9214,"mtime":1614439535048,"results":"24","hashOfConfig":"15"},{"size":2125,"mtime":1614914056190,"results":"25","hashOfConfig":"15"},{"size":935,"mtime":1614912412696,"results":"26","hashOfConfig":"15"},{"size":554,"mtime":1614779592578,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x9edt6",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/sovanden/projects/vitaminair.org/client/src/index.js",[],"/home/sovanden/projects/vitaminair.org/client/src/App.js",[],["56","57"],"/home/sovanden/projects/vitaminair.org/client/src/components/index.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/About.js",["58"],"/home/sovanden/projects/vitaminair.org/client/src/components/Navbar.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Footer.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Project.js",["59","60","61"],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/Home.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/Leaderboard.js",["62"],"// import React from 'react'\nimport { Row, Col, Input, Button, TreeSelect } from \"antd\"\nimport { FaSearch } from \"react-icons/fa\"\nimport { useQuery } from \"@apollo/client\"\nimport { GET_DONATIONS, GET_MOST_DONATIONS } from \"../../graphql/query\"\nimport moment from \"moment\"\nimport { useState } from \"react\"\nfunction Leaderboard() {\n  const [value, setValue] = useState(\"recent\")\n  //=====get Data==========\n  const { loading, data: donateData, error } = useQuery(GET_DONATIONS)\n  const {\n    loading: lodingMostDonate,\n    data: mostDonateData,\n    error: errorMostDonate,\n  } = useQuery(GET_MOST_DONATIONS)\n  if (loading || lodingMostDonate) return null\n  if (error || errorMostDonate) return `Error! ${error.message}`\n  console.log(donateData)\n  const active = (e) => {\n    const recents = document.getElementById(\"most-recents\")\n    const trees = document.getElementById(\"most-trees\")\n    if (e.target.id === \"most-recents\") {\n      trees.className = \"clicked\"\n      recents.className = \"\"\n      recents.style.zIndex = 2\n      trees.style.zIndex = 1\n      setValue(\"recent\")\n    } else if (e.target.id === \"most-trees\") {\n      recents.className = \"clicked\"\n      trees.className = \"\"\n      trees.style.zIndex = 2\n      recents.style.zIndex = 1\n      setValue(\"most\")\n    }\n  }\n  return (\n    <div style={{ marginTop: \"50px\" }}>\n      <h1>LEADERBOARD</h1>\n      <Row align=\"middle\" justify=\"center\">\n        <Col className=\"search-box gutter-row\">\n          <Input className=\"search\" type=\"text\" placeholder=\"Search\" />\n          <FaSearch className=\"fa-search\" />\n        </Col>\n        <Col offset={1} className=\"gutter-row most-recent-trees\">\n          <button value=\"recent\" id=\"most-recents\" onClick={active}>\n            Most Recents\n          </button>\n          <button value=\"most\" id=\"most-trees\" className=\"clicked\" onClick={active}>\n            Most Trees\n          </button>\n        </Col>\n      </Row>\n      {value === \"recent\" ? (\n        <div className=\"container user-list\">\n          {donateData.get_donations.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      ) : (\n        <div className=\"container user-list\">\n          {mostDonateData.get_most_trees.map((res) => {\n            const { tree, name, anonymous, create_at, user_message } = res\n            console.log(anonymous)\n            return (\n              <Row className=\"list\" align=\"middle\">\n                <Col\n                  className=\"avatar\"\n                  xs={{ span: 24 }}\n                  sm={{ span: 2 }}\n                  md={{ span: 1 }}\n                >\n                  <img src=\"/images/list-images/icon1.svg\" alt=\"\" />\n                </Col>\n                <Col flex=\"auto\">\n                  <p className=\"list-title\">\n                    {anonymous === false ? name : \"Anonymous\"}\n                  </p>\n                  <p className=\"list-message\">{user_message}</p>\n                </Col>\n                <Col xs={{ span: 24 }} sm={{ span: 24, offset: 3 }} md={{ span: 7 }}>\n                  <p>\n                    {tree === 1 ? (\n                      <p className=\"badge\">{tree} tree</p>\n                    ) : (\n                      <p className=\"badge\">{tree} trees</p>\n                    )}\n                  </p>\n\n                  <p className=\"list-message\">\n                    {/* {moment.unix(create_at / 1000).format(\"YYYY-MM-DD\")}, */}\n                    {moment.unix(create_at / 1000).format(\" Do YYYY, h:mm:ss A\")}\n                  </p>\n                </Col>\n              </Row>\n            )\n          })}\n          <a href=\"#form\">\n            <Button className=\"add-tree-btn\">ADD YOUR TREE</Button>\n          </a>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Leaderboard\n// import React from \"react\"\n// import TestForm from \"./testForm\"\n\n// const Leaderboard = () => {\n//   return (\n//     <div>\n//       <TestForm />\n//     </div>\n//   )\n// }\n\n// export default Leaderboard\n","/home/sovanden/projects/vitaminair.org/client/src/components/Home/InfoForm.js",[],"/home/sovanden/projects/vitaminair.org/client/src/components/Home/Activities.js",["63","64","65","66","67","68","69"],"/home/sovanden/projects/vitaminair.org/client/src/graphql/query.js",[],"/home/sovanden/projects/vitaminair.org/client/src/graphql/mutaion.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":122,"column":23,"nodeType":"76","endLine":124,"endColumn":25},{"ruleId":"77","severity":1,"message":"78","line":6,"column":26,"nodeType":"79","messageId":"80","endLine":6,"endColumn":31},{"ruleId":"77","severity":1,"message":"81","line":6,"column":33,"nodeType":"79","messageId":"80","endLine":6,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":41,"column":17,"nodeType":"76","endLine":41,"endColumn":82},{"ruleId":"77","severity":1,"message":"82","line":2,"column":35,"nodeType":"79","messageId":"80","endLine":2,"endColumn":45},{"ruleId":"77","severity":1,"message":"83","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":31},{"ruleId":"77","severity":1,"message":"84","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":16},{"ruleId":"77","severity":1,"message":"85","line":9,"column":18,"nodeType":"79","messageId":"80","endLine":9,"endColumn":27},{"ruleId":"77","severity":1,"message":"86","line":10,"column":10,"nodeType":"79","messageId":"80","endLine":10,"endColumn":16},{"ruleId":"77","severity":1,"message":"87","line":10,"column":18,"nodeType":"79","messageId":"80","endLine":10,"endColumn":27},{"ruleId":"77","severity":1,"message":"78","line":11,"column":26,"nodeType":"79","messageId":"80","endLine":11,"endColumn":31},{"ruleId":"77","severity":1,"message":"81","line":11,"column":33,"nodeType":"79","messageId":"80","endLine":11,"endColumn":40},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'refetch' is assigned a value but never used.","'TreeSelect' is defined but never used.","'Spin' is defined but never used.","'modal2' is assigned a value but never used.","'setModal2' is assigned a value but never used.","'modal3' is assigned a value but never used.","'setModal3' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]